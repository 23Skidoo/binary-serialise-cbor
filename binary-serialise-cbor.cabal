name:                binary-serialise-cbor
version:             0.1.1.0
synopsis:            Yet Another Binary Serialisation Library
license:             BSD3
license-file:        LICENSE.txt
author:              Duncan Coutts
maintainer:          duncan@community.haskell.org
copyright:           2015 Duncan Coutts,
                     2015 Well-Typed LLP,
                     2015 IRIS Connect Ltd
category:            Codec
build-type:          Simple
cabal-version:       >= 1.10

description:
  This package provides pure, efficient serialization of Haskell
  values directly into @ByteString@s for storage or transmission
  purposes. By providing a set of type class instances, you can
  also serialize any custom data type you have as well.
  .
  The underlying binary format used is the 'Consise Binary Object
  Representation', or CBOR, specified in RFC 7049. As a result,
  serialized Haskell values have implicit structure outside of the
  Haskell program itself, meaning they can be inspected or analyzed
  with custom tools.

extra-source-files:
  tests/test-vectors/appendix_a.json
  tests/test-vectors/README.md
  cbits/cbor.h

source-repository head
  type: git
  location: https://github.com/well-typed/binary-serialise-cbor.git


--------------------------------------------------------------------------------
-- Flags

flag newtime15
  default: False
  manual: False
  description: Use the new time 1.5 library

flag examples
  default: True
  manual: True
  description: Build example programs

--------------------------------------------------------------------------------
-- Library

library
  default-language:  Haskell2010
  ghc-options:       -Wall
  c-sources:         cbits/half.c
  include-dirs:      cbits

  exposed-modules:
    Data.Binary.Serialise.CBOR
    Data.Binary.Serialise.CBOR.Class
    Data.Binary.Serialise.CBOR.Decoding
    Data.Binary.Serialise.CBOR.Encoding
    Data.Binary.Serialise.CBOR.FlatTerm
    Data.Binary.Serialise.CBOR.IO
    Data.Binary.Serialise.CBOR.Read
    Data.Binary.Serialise.CBOR.Write
    Data.Binary.Serialise.CBOR.Term
    Data.Binary.Serialise.CBOR.Tutorial

  other-modules:
    Data.Binary.Serialise.CBOR.ByteOrder

  other-extensions:
    CPP, ForeignFunctionInterface, MagicHash,
    UnboxedTuples, BangPatterns, DeriveDataTypeable,
    RankNTypes

  build-depends:
    base                >= 4.6     && < 5.0,
    ghc-prim            >= 0.3     && < 0.6,
    text                >= 1.1     && < 1.3,
    bytestring          >= 0.10.4  && < 0.11,
    array               >= 0.4     && < 0.6,
    binary              >= 0.7     && < 0.9

  if flag(newtime15)
    build-depends:
      time              >= 1.5     && < 1.7
  else
    build-depends:
      time              >= 1.4     && < 1.5,
      old-locale


--------------------------------------------------------------------------------
-- Demo programs

executable demo-aeson
  hs-source-dirs:    demos
  main-is:           Aeson.hs

  default-language:  Haskell2010
  ghc-options:       -Wall -fno-warn-orphans

  other-extensions:
    CPP, BangPatterns

  if flag(examples)
    buildable: True
  else
    buildable: False

  build-depends:
    base                >= 4.6     && < 5.0,
    ghc-prim            >= 0.3     && < 0.6,
    text                >= 1.1     && < 1.3,
    bytestring          >= 0.10.4  && < 0.11,
    aeson               >= 0.7     && < 0.12,
    scientific,
    vector,
    unordered-containers,
    binary-serialise-cbor

--------------------------------------------------------------------------------
-- Tests

test-suite tests
  type:              exitcode-stdio-1.0
  hs-source-dirs:    tests
  main-is:           Main.hs

  default-language:  Haskell2010
  ghc-options:       -Wall

  other-modules:
    Tests.CBOR
    Tests.Safe
    Tests.Serialise
    Tests.Reference
    Tests.Reference.Implementation

  build-depends:
    base                >= 4.6     && < 5.0,
    ghc-prim            >= 0.3     && < 0.6,
    text                >= 1.1     && < 1.3,
    bytestring          >= 0.10.4  && < 0.11,
    array               >= 0.4     && < 0.6,
    binary              >= 0.7     && < 0.9,
    binary-serialise-cbor,

    deepseq,
    base64-bytestring,
    base16-bytestring,
    scientific,
    vector,
    aeson               >= 0.7     && < 0.12,
    half,
  --msgpack,
    tasty,
    tasty-hunit,
    tasty-quickcheck,
    QuickCheck          >= 2


--------------------------------------------------------------------------------
-- Benchmarks

benchmark vs-other-libs
  type:              exitcode-stdio-1.0
  hs-source-dirs:    bench
  main-is:           Main.hs

  default-language:  Haskell2010
  ghc-options:       -Wall -rtsopts

  other-modules:
    Misc

    Instances

    Macro
    Macro.Types
    Macro.Load
    Macro.DeepSeq
    Macro.MemSize
    Macro.ReadShow
    Macro.PkgAesonGeneric
    Macro.PkgAesonTH
    Macro.PkgBinary
    Macro.PkgCereal
  --Macro.PkgMsgpack
    Macro.CBOR

    Micro
    Micro.Types
    Micro.Load
    Micro.DeepSeq
    Micro.MemSize
    Micro.ReadShow
    Micro.PkgAesonGeneric
    Micro.PkgAesonTH
    Micro.PkgBinary
    Micro.PkgCereal
  --Micro.PkgMsgpack
    Micro.CBOR

  build-depends:
    base                >= 4.6     && < 5.0,
    ghc-prim            >= 0.3     && < 0.6,
    text                >= 1.1     && < 1.3,
    bytestring          >= 0.10.4  && < 0.11,
    array               >= 0.4     && < 0.6,
    binary              >= 0.7     && < 0.9,
    binary-serialise-cbor,

    filepath,
    containers          >= 0.5     && < 0.6,
    deepseq,
    aeson               >= 0.7     && < 0.12,
    cereal              >= 0.4     && < 0.6,
  --msgpack             == 0.7.*,
  --blaze-builder,
  --attoparsec,
    half,
    tar                 >= 0.4     && < 0.6,
    zlib                >= 0.5     && < 0.7,
    pretty,
    criterion

  if flag(newtime15)
    build-depends:
      time              >= 1.5     && < 1.7
  else
    build-depends:
      time              >= 1.4     && < 1.5,
      old-locale
